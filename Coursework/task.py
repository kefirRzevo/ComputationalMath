import numpy as np
import matplotlib.pyplot as plt

# параметры расчетной области
L = 1.0  # длина трубы
T = 0.5  # время расчета
N = 100  # число узлов сетки по пространству
M = 1000  # число узлов сетки по времени

# параметры газа
gamma = 1.4  # показатель адиабаты
rho_0 = 1.0  # плотность газа в начальный момент
p_0 = 1.0  # давление газа в начальный момент

# шаги сетки
h = L / (N - 1)
tau = T / (M - 1)

# массивы для хранения значений газодинамических величин
rho_1 = np.zeros((M, N))  # первый порядок
u_1 = np.zeros((M, N))
p_1 = np.zeros((M, N))
e_1 = np.zeros((M, N))

rho_2 = np.zeros((M, N))  # второй порядок
u_2 = np.zeros((M, N))
p_2 = np.zeros((M, N))
e_2 = np.zeros((M, N))

# начальные условия
rho_1[0, :] = rho_0
p_1[0, :] = p_0
e_1[0, :] = p_0 / (gamma - 1)
rho_1[0, :N//2] = 0.001  # небольшое ненулевое значение плотности вместо нуля
p_1[0, :N//2] = 0.001  # небольшое ненулевое значение давления вместо нуля
e_1[0, :N//2] = 0.001  # небольшое ненулевое значение энергии вместо нуля

rho_2[0, :] = rho_0
p_2[0, :] = p_0
e_2[0, :] = p_0 / (gamma - 1)
rho_2[0, :N//2] = 0.001  # небольшое ненулевое значение плотности вместо нуля
p_2[0, :N//2] = 0.001  # небольшое ненулевое значение давления вместо нуля
e_2[0, :N//2] = 0.001  # небольшое ненулевое значение энергии вместо нуля

# граничные условия
rho_1[:, 0] = 0.001  # небольшое ненулевое значение плотности вместо нуля
p_1[:, 0] = 0.001  # небольшое ненулевое значение давления вместо нуля
rho_2[:, 0] = 0.001  # небольшое ненулевое значение плотности вместо нуля
p_2[:, 0] = 0.001  # небольшое ненулевое значение давления вместо нуля

# расчет по схеме первого порядка
for n in range(M - 1):
    for k in range(1, N - 1):
        rho_1[n+1, k] = rho_1[n, k] - tau * rho_1[n, k]**2 * (u_1[n, k+1] - u_1[n, k]) / h
        u_1[n+1, k] = u_1[n, k] - tau * (p_1[n, k] - p_1[n, k-1]) / (h * rho_1[n, k])
        e_1[n+1, k] = e_1[n, k] - tau * p_1[n, k] * (u_1[n, k+1] - u_1[n, k]) / h
        p_1[n+1, k] = (gamma - 1) * rho_1[n+1, k] * e_1[n+1, k]

    # граничные условия
    rho_1[n+1, 0] = 0.001  # небольшое ненулевое значение плотности вместо нуля
    p_1[n+1, 0] = 0.001  # небольшое ненулевое значение давления вместо нуля
    rho_1[n+1, -1] = rho_1[n+1, -2]
    u_1[n+1, -1] = u_1[n+1, -2]
    p_1[n+1, -1] = p_1[n+1, -2]
    e_1[n+1, -1] = e_1[n+1, -2]

# расчет по схеме второго порядка
for n in range(M - 1):
    for k in range(1, N - 1):
        rho_2[n+1, k] = rho_2[n, k] - tau * rho_2[n, k]**2 * (u_2[n, k+1] - u_2[n, k-1]) / (2 * h)
        u_2[n+1, k] = u_2[n, k] - tau * (p_2[n, k+1] - p_2[n, k-1]) / (2 * h * rho_2[n, k])
        e_2[n+1, k] = e_2[n, k] - tau * p_2[n, k] * (u_2[n, k+1] - u_2[n, k-1]) / (2 * h)
        p_2[n+1, k] = (gamma - 1) * rho_2[n+1, k] * e_2[n+1, k]

    # граничные условия
    rho_2[n+1, 0] = 0.001  # небольшое ненулевое значение плотности вместо нуля
    p_2[n+1, 0] = 0.001  # небольшое ненулевое значение давления вместо нуля
    rho_2[n+1, -1] = rho_2[n+1, -2]
    u_2[n+1, -1] = u_2[n+1, -2]
    p_2[n+1, -1] = p_2[n+1, -2]
    e_2[n+1, -1] = e_2[n+1, -2]

# визуализация результатов
fig, (ax1, ax2, ax3) = plt.subplots(3, 1, figsize=(8, 12))

x = np.linspace(0, L, N)
t_steps = [0, M//4, M//2, 3*M//4, M-1]

for t in t_steps:
    ax1.plot(x, rho_1[t, :], 'b-', label=f'1 порядок, t={t*tau:.3f}')
    ax1.plot(x, rho_2[t, :], 'r--', label=f'2 порядок, t={t*tau:.3f}')

    ax2.plot(x, u_1[t, :], 'b-', label=f'1 порядок, t={t*tau:.3f}')
    ax2.plot(x, u_2[t, :], 'r--', label=f'2 порядок, t={t*tau:.3f}')

    ax3.plot(x, p_1[t, :], 'b-', label=f'1 порядок, t={t*tau:.3f}')
    ax3.plot(x, p_2[t, :], 'r--', label=f'2 порядок, t={t*tau:.3f}')

ax1.set_ylabel('плотность')
ax2.set_ylabel('скорость')
ax3.set_ylabel('давление')
ax3.set_xlabel('x')

ax1.legend(loc='best')
ax2.legend(loc='best')
ax3.legend(loc='best')

plt.tight_layout()
plt.show()
